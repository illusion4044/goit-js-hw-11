{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/js/main.js"],"sourcesContent":["export const createGalleryItemMarkup = images => {\n  return images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes }) => `\n        <div class=\"col\">\n          <div class=\"card shadow-sm\">\n            <a href=\"${largeImageURL}\" class=\"gallery-link\">\n              <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"gallery-img img-fluid\" />\n            </a>\n            <div class=\"card-body\">\n              <div class=\"d-flex justify-content-between align-items-center\">\n                <div class=\"btn-group\">\n                  <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">View</button>\n                  <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Edit</button>\n                </div>\n                <small class=\"text-body-secondary\">Likes: ${likes}</small>\n              </div>\n            </div>\n          </div>\n        </div>`\n    )\n    .join('');\n};","const API_KEY = '43813609-98f1a5b8a61f7cd1a2ca10379'; \nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchPhotosByQuery = (query = 'cat') => {\n    const searchParams = new URLSearchParams({\n        key: API_KEY,\n        q: query,\n        orientation: 'horizontal',\n    });\n\n    return fetch(`${BASE_URL}?${searchParams.toString()}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(`Error ${response.status}: ${response.statusText}`);\n            }\n\n            return response.json();\n        });\n};","\nimport SimpleLightbox from \"simplelightbox\";\n\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { createGalleryItemMarkup } from './render-functions.js';\nimport { fetchPhotosByQuery } from './pixabay-api.js';\n\n\nconst searchFormEl = document.querySelector('.js-search-form');\nconst galleryEl = document.querySelector('.js-gallery');\nconst loaderEl = document.querySelector('.js-loader');\n\nlet lightbox;\n\nfunction onSearchFormSubmit(event) {\n    event.preventDefault();\n    const searchQuery = event.target.elements.searchKeyword.value.trim();\n\n    if (searchQuery === '') {\n        galleryEl.innerHTML = '';\n        event.target.reset();\n        iziToast.show({\n            message: 'Input field cannot be empty',\n            position: 'topRight',\n            timeout: 2000,\n            color: 'red',\n        });\n        return;\n    }\n\n    galleryEl.innerHTML = '';\n    loaderEl.classList.remove('is-hidden');\n\n    fetchPhotosByQuery(searchQuery)\n        .then(imagesData => {\n            console.log('Received data:', imagesData); \n\n            \n            if (!imagesData.hits || imagesData.hits.length === 0) {\n                iziToast.show({\n                    message: \"Sorry, there are no images matching your search query. Please try again!\",\n                    position: 'topRight',\n                    timeout: 2000,\n                    color: 'red',\n                });\n\n                galleryEl.innerHTML = '';\n                return;\n            }\n\n            \n            galleryEl.innerHTML = createGalleryItemMarkup(imagesData.hits);\n\n            if (lightbox) {\n              lightbox.destroy(); \n            }\n            lightbox = new SimpleLightbox('.js-gallery a', {\n              captionDelay: 250,\n            });\n        })\n        .catch(error => {\n            console.error('Error fetching photos:', error);\n            iziToast.show({\n                message: 'An error occurred while fetching photos',\n                position: 'topRight',\n                timeout: 2000,\n                color: 'red',\n            });\n        })\n        .finally(() => {\n            event.target.reset();\n            loaderEl.classList.add('is-hidden');\n        });\n}\n\n\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);"],"names":["createGalleryItemMarkup","images","webformatURL","largeImageURL","tags","likes","API_KEY","BASE_URL","fetchPhotosByQuery","query","searchParams","response","searchFormEl","galleryEl","loaderEl","lightbox","onSearchFormSubmit","event","searchQuery","iziToast","imagesData","SimpleLightbox","error"],"mappings":"6vBAAO,MAAMA,EAA0BC,GAC9BA,EACJ,IACC,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,CAAO,IAAK;AAAA;AAAA;AAAA,uBAGjCF,CAAa;AAAA,0BACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAQQC,CAAK;AAAA;AAAA;AAAA;AAAA,eAK5D,EACA,KAAK,EAAE,ECrBNC,EAAU,qCACVC,EAAW,2BAEJC,EAAqB,CAACC,EAAQ,QAAU,CACjD,MAAMC,EAAe,IAAI,gBAAgB,CACrC,IAAKJ,EACL,EAAGG,EACH,YAAa,YACrB,CAAK,EAED,OAAO,MAAM,GAAGF,CAAQ,IAAIG,EAAa,SAAU,CAAA,EAAE,EAChD,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,SAASA,EAAS,MAAM,KAAKA,EAAS,UAAU,EAAE,EAGtE,OAAOA,EAAS,MAC5B,CAAS,CACT,ECPMC,EAAe,SAAS,cAAc,iBAAiB,EACvDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAW,SAAS,cAAc,YAAY,EAEpD,IAAIC,EAEJ,SAASC,EAAmBC,EAAO,CAC/BA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,OAAO,SAAS,cAAc,MAAM,OAE9D,GAAIC,IAAgB,GAAI,CACpBL,EAAU,UAAY,GACtBI,EAAM,OAAO,QACbE,EAAS,KAAK,CACV,QAAS,8BACT,SAAU,WACV,QAAS,IACT,MAAO,KACnB,CAAS,EACD,MACH,CAEDN,EAAU,UAAY,GACtBC,EAAS,UAAU,OAAO,WAAW,EAErCN,EAAmBU,CAAW,EACzB,KAAKE,GAAc,CAIhB,GAHA,QAAQ,IAAI,iBAAkBA,CAAU,EAGpC,CAACA,EAAW,MAAQA,EAAW,KAAK,SAAW,EAAG,CAClDD,EAAS,KAAK,CACV,QAAS,2EACT,SAAU,WACV,QAAS,IACT,MAAO,KAC3B,CAAiB,EAEDN,EAAU,UAAY,GACtB,MACH,CAGDA,EAAU,UAAYb,EAAwBoB,EAAW,IAAI,EAEzDL,GACFA,EAAS,QAAO,EAElBA,EAAW,IAAIM,EAAe,gBAAiB,CAC7C,aAAc,GAC5B,CAAa,CACb,CAAS,EACA,MAAMC,GAAS,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CH,EAAS,KAAK,CACV,QAAS,0CACT,SAAU,WACV,QAAS,IACT,MAAO,KACvB,CAAa,CACb,CAAS,EACA,QAAQ,IAAM,CACXF,EAAM,OAAO,QACbH,EAAS,UAAU,IAAI,WAAW,CAC9C,CAAS,CACT,CAGAF,EAAa,iBAAiB,SAAUI,CAAkB"}